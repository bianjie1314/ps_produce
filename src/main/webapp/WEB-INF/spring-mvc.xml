<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- springMVC只扫描controller，避免重复扫描service造成双事务 -->
	<context:component-scan base-package="com.ps.produce.**.controller" />
	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven enable-matrix-variables="true"
		content-negotiation-manager="contentNegotiationManager">
		<path-matching registered-suffixes-only="true" />
		<async-support default-timeout="30000000">

		</async-support>
	</annotation-driven>
	<beans:bean id="contentNegotiationManager"
		class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
		<beans:property name="favorPathExtension" value="false" />
	</beans:bean>
	<beans:bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
		<beans:property name="alwaysUseFullPath" value="true" />
	</beans:bean>
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources/ directory -->
	<resources mapping="/resources/**" location="/resources/" />



	<!-- 需加在InternalResourceViewResolver之前 -->
	<beans:bean class="org.springframework.web.servlet.view.XmlViewResolver">
		<beans:property name="location" value="/WEB-INF/spring-excel-views.xml"/>
	</beans:bean>

	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>


	<!-- 支持Shiro对Controller的方法级AOP安全控制 begin -->
	<beans:bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor">
		<beans:property name="proxyTargetClass" value="true" />
	</beans:bean>

	<beans:bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<beans:property name="securityManager" ref="securityManager" />
	</beans:bean>

	<beans:bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<beans:property name="exceptionMappings">
			<beans:props>
				<beans:prop key="org.apache.shiro.authz.UnauthorizedException">error/401</beans:prop>
				<beans:prop key="java.lang.Throwable">error/500</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
	<!-- 支持Shiro对Controller的方法级AOP安全控制 end -->


	<!-- Only needed because we require fileupload in the org.springframework.samples.mvc.fileupload 
		package -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />

	<!-- @Scheduled注解配置 -->
	<!-- <task:annotation-driven scheduler="qbScheduler" mode="proxy"/> -->
	<!-- <task:scheduler id="qbScheduler" pool-size="10"/> -->

	<!-- Imports user-defined @Controller beans that process client requests -->
	<beans:import resource="controllers.xml" />
</beans:beans>
