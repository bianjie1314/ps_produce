<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ps.produce.order.dao.OrderDao">
   
   <resultMap type="com.ps.produce.order.entity.Order" id="orderResult">
		<id property="id" column="id"/>
		<result property="orderNo" column="order_no"/>
		<result property="orderUsername" column="order_username"/>
		<result property="orderCreateTime" column="order_create_time"/>
		
		<result property="expressUsername" column="express_username"/>
		<result property="expressTel" column="express_Tel"/>
		<result property="expressAddress" column="express_address"/>
		<result property="status" column="status"/>
		<result property="optUseranme" column="opt_useranme"/>
		<result property="optUserId" column="opt_user_id"/>
		<result property="callbackUrl" column="callback_url"/>
				
		<result property="remarks" column="remarks"/>
		<result property="updateDate" column="update_date"/>
		<result property="createDate" column="create_date"/>
		
		<collection property="products" ofType="com.ps.produce.order.entity.Product">
			<id property="id" column="product.id"/>
			<result property="orderId" column="product.orderId"/>
			<result property="name" column="product.name"/>
			<result property="color" column="product.color"/>
			<result property="size" column="product.size"/>
			<result property="quantity" column="product.quantity"/>
			<result property="ean" column="product.ean"/>
			<result property="templateName" column="product.templateName"/>
			<result property="image" column="product.image"/>
			
		</collection> 
	</resultMap>
   
    <sql id="where_clause">
    	<if test="query.keyword != null and query.keyword != ''">
			and (p.name like CONCAT('%',#{query.keyword},'%') or o.order_no like CONCAT('%',#{query.keyword},'%') )
		</if>
		<if test="query.statu !=null">
		    and status=#{query.statu}
		</if>
		<if  test="query.start!=null and query.end!=null">
		     and order_create_time &gt; #{query.start} and order_create_time &lt; #{query.end} 
		</if>
		<if test="query.orderUsername !=null and query.orderUsername!=''">
		    and order_username=#{query.orderUsername}
		</if>
		
    </sql>
	<select id="queryOrderUser" resultType="string" >
	    select distinct order_username from produce_order where 1=1
	</select>
	<select id="findList" resultMap="orderResult">
		SELECT 
			o.*,
			p.id as  'product.id' ,
			p.order_id as  'product.orderId' ,
			p.name as 'product.name',
			p.color as  'product.color' ,
			p.size as  'product.size' ,
			p.quantity as  'product.quantity' ,
			p.ean as  'product.ean' ,
			p.template_name as  'product.templateName' ,
			p.image as  'product.image' 
			
		FROM produce_order o left join produce_product p on o.id=p.order_id
		<where>
			<include refid="where_clause" />
		</where>
		limit #{pageBean.beginIndex},#{pageBean.pageSize}
	</select>
	
	<select id="count" resultType="int">
		SELECT 
			count(DISTINCT o.id)
		
			
		FROM produce_order o left join produce_product p on o.id=p.order_id
		<where>
			<include refid="where_clause" />
		</where>
		limit #{pageBean.beginIndex},#{pageBean.pageSize}
		 <!-- LIMIT #{beginIndex},#{pageSize} -->
	</select>
	
	<select id="findOne" resultMap="orderResult">
		SELECT 
			o.*,
			p.id as  'product.id' ,
			p.order_id as  'product.orderId' ,
			p.name as 'product.name',
			p.color as  'product.color' ,
			p.size as  'product.size' ,
			p.quantity as  'product.quantity' ,
			p.ean as  'product.ean' ,
			p.template_name as  'product.templateName' ,
			p.image as  'product.image' 			
		FROM produce_order o left join produce_product p on o.id=p.order_id where o.id=#{id}
	</select>
	
	
	<insert id="insert">
		INSERT INTO order(
			value, 
			label, 
			type, 
			description, 
			sort, 
			create_date, 
			update_date, 
			remarks, 
			del_flag
		) VALUES (		
			#{value}, 
			#{label}, 
			#{type}, 
			#{description}, 
			#{sort}, 
			#{createDate}, 
			#{updateDate}, 
			#{remarks}, 
			#{delFlag}
		)
	</insert>
	<update id="changOrderStatus">
	    update produce_order set status=#{status} where id=#{orderId}
	</update>
	<update id="update">
		UPDATE order SET 
			value = #{value}, 
			label = #{label}, 
			type = #{type}, 
			description = #{description}, 
			sort = #{sort}, 
			update_date = #{updateDate} 
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		delete from order WHERE id = #{id}
	</update>
	
</mapper>