<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ps.produce.order.dao.OrderDao">
   
   <resultMap type="com.ps.produce.order.entity.Order" id="orderResult">
		<id property="id" column="id"/>
		<result property="orderNo" column="order_no"/>
		<result property="orderUsername" column="order_username"/>
		<result property="orderCreateTime" column="order_create_time"/>
		<result property="expressName" column="express_name"/>
		<result property="expressNo" column="express_no"/>
		<result property="expressUsername" column="express_username"/>
		<result property="expressTel" column="express_tel"/>
		<result property="expressFixedPhone" column="express_fixed_phone"/>
		<result property="expressZipCode" column="express_zip_code"/> 
		
		<result property="expressAddress" column="express_address"/>
		<result property="status" column="status"/>
		<result property="optUseranme" column="opt_useranme"/>
		<result property="optUserId" column="opt_user_id"/>
		<result property="callbackUrl" column="callback_url"/>
		<result property="printCount" column="print_count"/>	
		<result property="lastPrintDate" column="last_print_date"/>	
		<result property="remarks" column="remarks"/>
		<result property="updateDate" column="update_date"/>
		<result property="createDate" column="create_date"/>
		
		<collection property="products" ofType="com.ps.produce.order.entity.Product">
			<id property="id" column="product.id"/>
			<result property="orderId" column="product.orderId"/>
			<result property="name" column="product.name"/>
			<result property="color" column="product.color"/>
			<result property="size" column="product.size"/>
			<result property="quantity" column="product.quantity"/>
			<result property="ean" column="product.ean"/>
			<result property="templateName" column="product.templateName"/>
			<result property="image" column="product.image"/>
			<result property="sku" column="product.sku"/>
		</collection> 
	</resultMap>
   
    <sql id="where_clause">
    	<if test="query.keyword != null and query.keyword != ''">
			and (p.sku like CONCAT('%',#{query.keyword},'%') or p.template_name like CONCAT('%',#{query.keyword},'%') or p.name like CONCAT('%',#{query.keyword},'%') or o.order_no like CONCAT('%',#{query.keyword},'%') )
		</if>
		<if test="query.status !=null">
		    and status in (${query.status})
		</if>
		
		<if  test="query.start!=null and query.end!=null">
		     and order_create_time &gt; #{query.start} and order_create_time &lt; #{query.end} 
		</if>
		<if test="query.orderUsername !=null and query.orderUsername!=''">
		    and order_username=#{query.orderUsername}
		</if>
		<if test="query.id !=null and query.id !='' and query.status=='3'">
		   and opt_user_id=#{query.id}
		</if>
		
    </sql>
    
    
	<select id="queryOrderUser" resultType="string" >
	    select distinct order_username from produce_order where 1=1
	</select>
	<insert id="addLog">
	   INSERT INTO produce_order_log(status,flag,opt_user_id,opt_username,remarks,create_date,order_id) VALUES 
	   (#{orderLog.status},
		#{orderLog.flag},
		#{orderLog.optUserId},
		#{orderLog.optUsername}	,
		#{orderLog.remarks},
		#{orderLog.createDate},
		#{orderLog.orderId}
			)
	</insert>
	<select id="findList" resultMap="orderResult">
		
	
		SELECT 
		
			a.*,
			p.id as  'product.id' ,
			p.order_id as  'product.orderId' ,
			p.name as 'product.name',
			p.color as  'product.color' ,
			p.size as  'product.size' ,
			p.quantity as  'product.quantity' ,
			p.ean as  'product.ean' ,
			p.template_name as  'product.templateName' ,
			p.image as  'product.image', 
		    p.sku	 as  'product.sku' 
		    
		 from (
		SELECT    DISTINCT o.*			
		FROM   produce_order  o left join produce_product p on o.id=p.order_id
		<where>
			<include refid="where_clause" />
		</where>  order by order_create_time desc limit #{pageBean.beginIndex},#{pageBean.pageSize}  
		) a left join produce_product p on a.id=p.order_id
		
	</select>
	
	<select id="count" resultType="Integer">
		SELECT 
			count(DISTINCT o.id)
		
			
		FROM produce_order o  left join produce_product p on o.id=p.order_id
		<where>
			<include refid="where_clause" />
		</where>
	</select>
	
	<select id="findOne" resultMap="orderResult">
		SELECT 
			o.*,
			p.id as  'product.id' ,
			p.order_id as  'product.orderId' ,
			p.name as 'product.name',
			p.color as  'product.color' ,
			p.size as  'product.size' ,
			p.quantity as  'product.quantity' ,
			p.ean as  'product.ean' ,
			p.template_name as  'product.templateName' ,
			p.image as  'product.image' 			
		FROM produce_order o left join produce_product p on o.id=p.order_id where o.id=#{id}
	</select>
	
	<update id="addMakeOrder">
	   update produce_order set opt_username=#{userName},opt_user_id=#{userId},status=#{status} where id=#{orderNo}
	</update>
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO produce_order(
			order_no, 
			order_username, 
			order_create_time, 
			express_username, 
			express_tel, 
			express_fixed_phone,
			express_zip_code,
			express_address,
			callback_url,			
			create_date, 
			update_date, 
			remarks
		) VALUES (		
			#{orderNo}, 
			#{orderUsername}, 
			#{orderCreateTime}, 
			#{expressUsername}, 
			#{expressTel}, 
			#{expressFixedPhone}, 
			#{expressZipCode}, 
			#{expressAddress}, 
			#{callbackUrl}, 
			#{createDate}, 
			#{updateDate},
			#{remarks}
		)
	</insert>
	
	<insert id="insertProduct">
		INSERT INTO produce_product(
			order_id, 
			template_name, 
			name, 
			color, 
			size, 
			quantity, 
			ean, 
			image, 
			sku, 
			materials
		) VALUES 
		<foreach collection="products" item="product" separator=",">	
		 ( #{orderId}, #{product.templateName}, #{product.name},#{product.color}, #{product.size}, #{product.quantity}, #{product.ean}, #{product.image},#{product.sku}, #{product.materials} )
		
			</foreach>
	</insert>
	<update id="addShipInfo">
	    update produce_order set express_name=#{order.expressName} , express_no=#{order.expressNo} where id=#{order.id}
	</update>
	<update id="changOrderStatus">
	    update produce_order set status=#{status} where id=#{orderId}
	</update>
	<update id="cancle" >
	    update produce_order set status=-1 where order_no=#{order.orderNo} and status=0
	</update>
	
	<select id="queryProductImg" resultType="String" >
	    select materials from produce_product where id=#{productId}
	</select>
	<update id="update">
		UPDATE order SET 
			value = #{value}, 
			label = #{label}, 
			type = #{type}, 
			description = #{description}, 
			sort = #{sort}, 
			update_date = #{updateDate} 
		WHERE id = #{id}
	</update>
	<update id="addWaitMakeOrder">
	update  produce_order set status=2 where order_no=#{orderNo} and status=1
	</update>
	<select id="findOneByOrderNo" resultType="int" >
	 select count(1) from produce_order where order_no=#{orderNo}
	</select>
	<update id="delete">
		delete from order WHERE id = #{id}
	</update>
	<update id="addWaitShippingOrder">
	  update  produce_order set status=4 where order_no=#{orderNo} and status=3
	</update>
	
	<select id="findOrderLogByOrderId" resultType="com.ps.produce.order.entity.OrderLog" >
	 select * from produce_order_log where order_id=#{orderId}
	</select>
	
	
	<select id="findOrderByOrderIds" resultMap="orderResult" >
	 SELECT 
			o.*,
			p.id as  'product.id' ,
			p.order_id as  'product.orderId' ,
			p.name as 'product.name',
			p.color as  'product.color' ,
			p.size as  'product.size' ,
			p.quantity as  'product.quantity' ,
			p.ean as  'product.ean' ,
			p.template_name as  'product.templateName' ,
			p.image as  'product.image' 			
		FROM produce_order o left join produce_product p on o.id=p.order_id where o.id in (${orderIds})
	</select>
	<select id="findOrderIdbyOrderNo" resultType="Long">
	 select id from produce_order where order_no=#{orderNo}
	</select>
	<select id="findStatusByOrderId" resultType="int">
	select status from produce_order where id=#{orderId}
	</select>
	<update id="addPrintOrder" >
	   update produce_order set status=#{status},last_print_date=#{date},print_count=print_count+1 where id=#{orderId}
	</update>
</mapper>