<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ps.produce.system.dao.UserDao">
	
	 <resultMap id="userResult" type="com.ps.produce.system.entity.User">
		<id property="id" column="id" />
		<result property="clazzId" column="clazz_id" />
		<result property="username" column="username" />
		<result property="password" column="password" />
		<result property="email" column="email" />
		<result property="name" column="name" />
		<result property="phone" column="phone" />
		<result property="salt" column="salt" />
		<result property="remarks" column="remarks" />
		<result property="createDate" column="create_date" />
		<result property="updateDate" column="update_date" />
		<result property="delFlag" column="del_flag" />
		<association property="office" javaType="com.ps.produce.system.entity.Office">
			<id property="id" column="office.id" />
			<result property="name" column="office.name" />
			<result property="master" column="office.master" />
			<result property="parentIds" column="office.parentIds" />
			<association property="parent" javaType="com.ps.produce.system.entity.Office">
				<id property="id" column="office.parent.id" />
			</association>
		</association>
		<collection property="roleList" ofType="com.ps.produce.system.entity.Role">
			<id property="id" column="roleList.id" />
			<result property="name" column="roleList.name" />
		</collection>
	</resultMap>
	
	  <sql id="userColumns">
    	a.id,
    	a.office_id AS "office.id",
    	a.username,
    	a.name ,
    	a.password,
    	a.email,
		a.phone,
		a.salt,
		a.remarks,
		a.create_date,
		a.update_date,
		a.del_flag,
		ssc.clazz_id,
    	o.name AS "office.name",
    	o.parent_id AS "office.parent.id",
    	o.parent_ids AS "office.parentIds",
    	o.master  
    </sql>
    
    <sql id="userJoins">
		LEFT JOIN sys_office o ON o.id = a.office_id left join sys_stu_clazz ssc on a.id=ssc.user_id
    </sql>
	
	<!-- 根据编号获得用户 -->
	<select id="get" resultType="com.ps.produce.system.entity.User">
		SELECT
			<include refid="userColumns"/>
		FROM sys_user a 
		<include refid="userJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<!-- 根据登录名查询用户 -->
	<select id="findByLoginName" resultType="com.ps.produce.system.entity.User">
		SELECT
			<include refid="userColumns"/>
		FROM sys_user a
		<include refid="userJoins"/>
		WHERE a.username = #{username}
	</select>
	
	<!-- 分页查询用户信息 -->
	
	<select id="findByRoleId" resultMap="userResult">
	   SELECT
			<include refid="userColumns"/>,
			r.id as "roleList.id",
			r.name as "roleList.name"
		FROM sys_user a
		<include refid="userJoins"/>
		LEFT JOIN sys_user_role ur ON a.id = ur.user_id
		LEFT JOIN sys_role r ON ur.role_id = r.id

		WHERE a.del_flag = 0
		and ur.role_id=#{roleId}
		ORDER BY a.username 
	    
	</select>
	<select id="findByPage" resultMap="userResult">
		SELECT
			<include refid="userColumns"/>,
			r.id as "roleList.id",
			r.name as "roleList.name"
		FROM sys_user a
		<include refid="userJoins"/>
		LEFT JOIN sys_user_role ur ON a.id = ur.user_id
		LEFT JOIN sys_role r ON ur.role_id = r.id
<!-- 		<if test="role != null and role.id != null and role.id != ''"> -->
<!-- 			JOIN sys_user_role ur ON ur.user_id = a.id AND ur.role_id = #{role.id} -->
<!-- 		</if> -->
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
<!-- 		<if test="company != null and company.id != null and company.id != ''"> -->
<!-- 			AND (c.id = #{company.id} OR c.parent_ids LIKE  -->
<!-- 					<if test="dbName == 'oracle'">'%,'||#{company.id}||',%')</if> -->
<!-- 					<if test="dbName == 'mssql'">'%,'+#{company.id}+',%')</if> -->
<!-- 					<if test="dbName == 'mysql'">CONCAT('%,', #{company.id}, ',%'))</if> -->
<!-- 		</if> -->
<!-- 		<if test="office != null and office.id != null and office.id != ''"> -->
<!-- 			AND (o.id = #{office.id} OR o.parent_ids LIKE  -->
<!-- 					<if test="dbName == 'oracle'">'%,'||#{office.id}||',%')</if> -->
<!-- 					<if test="dbName == 'mssql'">'%,'+#{office.id}+',%')</if> -->
<!-- 					<if test="dbName == 'mysql'">CONCAT('%,', #{office.id}, ',%'))</if> -->
<!-- 		</if> -->
		<!-- 如果不是超级管理员，则不显示超级管理员用户 -->
<!-- 		<if test="!currentUser.admin"> -->
<!-- 			AND a.id != '1' -->
<!-- 		</if> -->
<!-- 		<if test="loginName != null and loginName != ''"> -->
<!-- 			AND a.login_name like  -->
<!-- 					<if test="dbName == 'oracle'">'%'||#{loginName}||'%'</if> -->
<!-- 					<if test="dbName == 'mssql'">'%'+#{loginName}+'%'</if> -->
<!-- 					<if test="dbName == 'mysql'">CONCAT('%', #{loginName}, '%')</if> -->
<!-- 		</if> -->
<!-- 		<if test="name != null and name != ''"> -->
<!-- 			AND a.name like  -->
<!-- 					<if test="dbName == 'oracle'">'%'||#{name}||'%'</if> -->
<!-- 					<if test="dbName == 'mssql'">'%'+#{name}+'%'</if> -->
<!-- 					<if test="dbName == 'mysql'">CONCAT('%', #{name}, '%')</if> -->
<!-- 		</if> -->
		<!-- 数据范围过滤 -->
		${sqlMap.dsf}
		ORDER BY a.username
	</select>
	
	<!-- 更新用户 -->
	<update id="update">
		UPDATE sys_user SET 
			office_id = #{office.id}, 
			username = #{username}, 			
			email = #{email}, 
			phone = #{phone}, 
			update_date = #{updateDate}, 
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
		<!-- 更新密码 -->
	<update id="updatePassword">
		UPDATE sys_user SET 
			password = #{password}, 
			salt = #{salt}
		WHERE id = #{id}
	</update>
	<!-- 更新用户 -->
	<update id="saveOSInfo">
		UPDATE sys_user SET 
			office_id = #{office.id}, 
			
		WHERE id = #{id}
	</update>
	
	
	
	<update id="deleteUserRole">
		delete from sys_user_role where user_id=#{id}
	</update>
	
	<insert id="insertUserRole">
		insert into sys_user_role (user_id,role_id) 
		values
		<foreach collection="roleList" item="role" separator=",">
			(#{id},#{role.id})
		</foreach>
	</insert>
	<insert id ="insertRoleAndUser">
	 insert into sys_user_role(user_id,role_id)
	 values
	 (#{id},#{roleId})
	</insert>
	<select id="findCou" resultType="com.ps.produce.system.entity.User">
	   select * from sys_user su  LEFT JOIN sys_user_role ur on su.id=ur.user_id where role_id=11
	</select>
	<!-- 插入用户 -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO sys_user(
		
			username,
			password, 
			salt,
			name, 
			email, 
			phone, 
			create_date, 
			update_date, 
			remarks, 
			del_flag
		) VALUES (	
			#{username}, 
			#{password}, 
			#{salt}, 
			#{name}, 
			#{email}, 
			#{phone}, 
			#{createDate}, 
			#{updateDate}, 
			#{remarks}, 
			#{delFlag}
		)
	</insert>
	<delete id="deleteBatch">
		delete from  sys_user  where
		id in
		<foreach collection="ids" item="id" open="(" close=")" separator=",">
			#{id}
		</foreach>
	</delete>
	<select id="getById" resultType="com.ps.produce.system.entity.User">
		select * from sys_user where id=#{id}
		
	</select>
	<select id="getUserAll" resultType="com.ps.produce.system.entity.User">
		select * from sys_user where 1=1
		<if test="username!=null and username!=''">
			and username like CONCAT('%', #{username}, '%')
		</if>
	</select>
	<insert id="distribution">
	  insert into clazz_course_tea (tea_id,course_id,clazz_id) values(#{teaId},#{courseId},#{clazzId})
	</insert>
	<select id="queryTea" resultType="map">
	 select tea_id as teaId ,su.name  from clazz_course_tea  cct left join sys_user su on cct.tea_id=su.id where course_id=#{courseId}
	</select>
	<select id="queryTea1" resultType="map">
	 select tea_id as teaId ,su.name  from clazz_course_tea  cct left join sys_user su on cct.tea_id=su.id where course_id=#{courseId} and tea_id={id}
	</select>
	<select id="queryclazz" resultType="map">
	select DISTINCT clazz_id as clazzId ,c.clazz_name  from clazz_course_tea  cct left join clazz c on c.id=cct.clazz_id where 1=1
	<if test="teaId!=0">
	and tea_id=#{teaId}
	</if>
	</select>
	<select id="findD" resultType="int">
	select count(*) from clazz_course_tea where tea_id=#{teaId} and course_id=#{courseId}
	</select>
	
	<update id="updateDis">
	update clazz_course_tea set clazz_id=#{clazzId} where course_id=#{courseId} and tea_id=#{teaId}
	
	</update>
	<select id="findDis" resultType="int">
	 select count(*) from clazz_course_tea where course_id=#{courseId} and tea_id=#{teaId}
	</select>
</mapper>